brew install deno

> parseArgs
```
# deno run Layouts/Maze/_base.ts -r 13 -c13 -t RENDER_MAZE_AS.WALLED -s 42 --fullword -b now too --and-another unmarked one 42

import { parse } from "https://deno.land/std@0.120.0/flags/mod.ts"
const parsedArgs = parse(Deno.args)
console.log('parsedArgs', parsedArgs)

/** outputs:
  parsedArgs {
    _: [ "too", "one", 42 ],
    r: 13,
    c: 13,
    t: "RENDER_MAZE_AS.WALLED",
    s: 42,
    fullword: true,
    b: "now",
    "and-another": "unmarked"
  }
*/

// Stop parsing early, after `--` everything is added to generic array
# deno run Layouts/Maze/_base.ts -r 13 -c13 -t RENDER_MAZE_AS.WALLED -s 42 --fullword -b now -- too --and-another unmarked one 42
parsedArgs {
  _: [ "too", "--and-another", "unmarked", "one", "42" ],
  r: 13,
  c: 13,
  t: "RENDER_MAZE_AS.WALLED",
  s: 42,
  fullword: true,
  b: "now"

```

https://deno.land/manual
- https://deno.land/manual@v1.17.1/examples
https://deno.com/deploy/docs
- https://deno.com/deploy/docs/examples
- https://deno.com/deploy/docs/resources-frameworks
https://doc.deno.land/
- https://doc.deno.land/deno/stable

https://deno.land/manual@v1.15.3/testing#testing

https://deno.com/blog/every-web-api-in-deno


> A microframework for Deno's HTTP server with zero third-party dependencies
https://drash.land/drash/v2.x/getting-started/introduction

std
https://deno.land/std|https://deno.land/x/
https://deno.land/std@0.119.0/log|https://deno.land/x/ky@v0.23.0

> New: via ProductHunt
> https://lumeland.github.io/getting-started/examples/

3rd|Parties
-|-
https://deno.land/x/mod@v2.2.11|https://deno.land/x/darango@0.0.4 \[ArangoDB]|
https://deno.land/x/tdd@v0.6|https://deno.land/x/pool@v0.1.0 \[resource pool]|
https://deno.land/x/quarrel@v0.5.0|https://deno.land/x/middleware@1.2.0|
https://deno.land/x/rdf@0.4.0|https://deno.land/x/seeded_numbers@1.0.3
https://deno.land/x/stego@v0.1|https://deno.land/x/fonction@v2.1.0-beta.4
https://deno.land/x/emoji@0.1.2|.x

https://dev.to/t/deno
https://oakserver.github.io/oak/ # http middleware
https://dev.to/moose/lets-build-a-web-crawler-4jf
https://dev.to/diguifi/meet-the-world-s-tiniest-8bit-mmorpg-3kj6
- https://diguifi.itch.io/tiny-land
- https://github.com/tiny-devs/tiny-dungeon-online


`$ deno info https://deno.land/std@0.67.0/http/file_server.ts`
`$ deno info https://deno.land/std@0.106.0/ws/mod.ts` # websockets
`$ deno run --allow-net=deno.land https://deno.land/std/examples/curl.ts https://deno.land/`
`$ deno run --allow-net --allow-read https://deno.land/std/examples/chat/server.ts` # chat server on 8080
`$ deno run --allow-net --allow-read https://deno.land/std/examples/flags.ts -a -b c --anything`


https://docs.rs/deno_core/latest/deno_core/

> misc rebuild

https://github.com/lhartikk/AstroBuild/blob/master/astro_build.py
